name: CI/CD

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go 1.22
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build -o go-web-app ./...

      - name: Test
        run: go test ./...

  code-quality:
    name: Code quality (golangci-lint)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go 1.22
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Show go env (debug)
        run: go env

      - name: Download dependencies
        run: |
          if [ -f go.mod ]; then go mod download; fi

      - name: Install golangci-lint (compile with runner's Go)
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Run golangci-lint
        run: golangci-lint run --verbose

  push:
    name: Build & Push image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{ github.run_id }}

  update-newtag-in-helm-chart:
    name: Update Helm tag
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Checkout repository (for pushing changes)
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Update tag in Helm chart
        run: |
          sed -i "s/^tag: .*/tag: \"${{ github.run_id }}\"/" helm/go-web-app-chart/values.yaml
          git status --porcelain

      - name: Commit and push changes (skip CI to avoid loop)
        run: |
          git config --global user.email "abhishek@gmail.com"
          git config --global user.name "Abhishek Veeramalla"
          git add helm/go-web-app-chart/values.yaml
          git commit -m "Update tag in Helm chart [skip ci]" || echo "No changes to commit"
          git push origin HEAD:main
